<?xml version="1.0" encoding="UTF-8"?>
<project name="visualjade" default="all">
  
  
  <property file="visualjade.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.ear"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.swc"/>
    <include name="*.ane"/>
    <include name="*.egg"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.jade-all-4.2.classpath">
    <pathelement location="${basedir}/../../Курсовая/JADE-bin-4.2.0/jade/lib/commons-codec/commons-codec-1.3.jar"/>
    <pathelement location="${basedir}/../../Курсовая/JADE-bin-4.2.0/jade/lib/jade.jar"/>
  </path>
  
  
  <!-- Global Libraries -->
  
  <path id="library.javafx.classpath">
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 Runtime"/>
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 SDK/bin"/>
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 SDK/rt/bin"/>
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 SDK/lib/ant-javafx.jar"/>
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 SDK/lib/javafx-doclet.jar"/>
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 SDK/lib/javafx-mx.jar"/>
    <pathelement location="C:/Program Files/Oracle/JavaFX 2.2 SDK/rt/lib/jfxrt.jar"/>
  </path>
  
  
  <!-- Application Server Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module VisualJade -->
  
  <dirname property="module.visualjade.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.visualjade" value="${compiler.args}"/>
  
  <property name="visualjade.output.dir" value="${module.visualjade.basedir}/out/production/VisualJade"/>
  <property name="visualjade.testoutput.dir" value="${module.visualjade.basedir}/out/test/VisualJade"/>
  
  <path id="visualjade.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="visualjade.module.production.classpath">
    <path refid="library.jade-all-4.2.classpath"/>
    <path refid="library.javafx.classpath"/>
  </path>
  
  <path id="visualjade.runtime.production.module.classpath">
    <pathelement location="${visualjade.output.dir}"/>
    <path refid="library.jade-all-4.2.classpath"/>
    <path refid="library.javafx.classpath"/>
  </path>
  
  <path id="visualjade.module.classpath">
    <pathelement location="${visualjade.output.dir}"/>
    <path refid="library.jade-all-4.2.classpath"/>
    <path refid="library.javafx.classpath"/>
  </path>
  
  <path id="visualjade.runtime.module.classpath">
    <pathelement location="${visualjade.testoutput.dir}"/>
    <pathelement location="${visualjade.output.dir}"/>
    <path refid="library.jade-all-4.2.classpath"/>
    <path refid="library.javafx.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.visualjade">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.visualjade">
    <patternset refid="excluded.from.module.visualjade"/>
  </patternset>
  
  <path id="visualjade.module.sourcepath">
    <dirset dir="${module.visualjade.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.visualjade" depends="compile.module.visualjade.production,compile.module.visualjade.tests" description="Compile module VisualJade"/>
  
  <target name="compile.module.visualjade.production" description="Compile module VisualJade; production classes">
    <mkdir dir="${visualjade.output.dir}"/>
    <javac destdir="${visualjade.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.visualjade}"/>
      <bootclasspath refid="visualjade.module.bootclasspath"/>
      <classpath refid="visualjade.module.production.classpath"/>
      <src refid="visualjade.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.visualjade"/>
    </javac>
    
    <copy todir="${visualjade.output.dir}">
      <fileset dir="${module.visualjade.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.visualjade.tests" depends="compile.module.visualjade.production" description="compile module VisualJade; test classes" unless="skip.tests"/>
  
  <target name="clean.module.visualjade" description="cleanup module">
    <delete dir="${visualjade.output.dir}"/>
    <delete dir="${visualjade.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.visualjade" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.visualjade" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>
</project>